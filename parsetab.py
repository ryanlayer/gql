
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '<\xc0:\xd6\x8e\x96m\xc9\xb6o{\xda*?\x8a('
    
_lr_action_items = {'COUNT':([0,6,9,17,27,40,43,55,56,64,78,79,80,81,82,83,85,92,93,94,95,100,104,105,],[1,-3,1,1,1,-8,-5,1,-6,-4,87,87,87,87,87,87,-7,1,-59,-63,-61,-58,-62,-60,]),'LPAREN':([66,68,69,70,71,72,73,],[77,78,79,80,81,82,83,]),'NOTEQUAL':([78,79,80,81,82,83,114,115,116,],[94,94,94,94,94,94,-64,94,-65,]),'MERGEMIN':([0,6,9,17,27,40,43,55,56,64,85,92,93,94,95,100,104,105,],[2,-3,2,2,2,-8,-5,2,-6,-4,-7,2,-59,-63,-61,-58,-62,-60,]),'MEDIAN':([78,79,80,81,82,83,],[96,96,96,96,96,96,]),'SUM':([78,79,80,81,82,83,],[91,91,91,91,91,91,]),'NUMBER':([0,6,9,17,22,24,27,40,43,55,56,64,77,85,92,93,94,95,100,104,105,],[11,-3,11,11,-68,42,11,-8,-5,11,-6,-4,86,-7,11,-59,-63,-61,-58,-62,-60,]),'LESSTHAN':([78,79,80,81,82,83,114,115,116,],[93,93,93,93,93,93,-64,93,-65,]),'PEAK':([0,6,17,40,43,56,64,85,],[3,-3,3,-8,-5,-6,-4,-7,]),'PRINT':([0,6,17,40,43,56,64,85,],[4,-3,4,-8,-5,-6,-4,-7,]),'SUBTRACT':([8,12,29,],[-68,34,-68,]),'COLLAPSE':([78,79,80,81,82,83,],[103,103,103,103,103,103,]),'RPAREN':([5,11,22,23,28,29,30,35,36,38,39,47,48,49,50,51,52,54,57,58,59,60,61,62,63,65,67,74,76,86,87,88,89,90,91,96,97,98,99,101,102,103,106,107,108,109,110,111,112,113,117,118,119,120,121,122,123,124,],[-11,-10,-68,-26,-14,-9,-12,-67,-25,-34,-34,-21,-24,-23,-66,-27,-22,-28,-34,-16,-18,-17,-15,-20,-19,-13,-33,-36,-32,113,-47,-56,-44,-51,-46,-49,-54,-50,-53,-48,118,-52,-45,119,120,121,122,123,-35,-38,-57,-37,-39,-40,-43,-41,-42,-55,]),'SEMICOLON':([5,8,11,20,22,23,25,28,29,30,35,36,38,39,42,45,47,48,49,50,51,52,54,57,58,59,60,61,62,63,65,67,74,75,76,112,113,118,119,120,121,122,123,],[-11,-9,-10,40,-68,-26,43,-14,-9,-12,-67,-25,-34,-34,56,64,-21,-24,-23,-66,-27,-22,-28,-34,-16,-18,-17,-15,-20,-19,-13,-33,-36,85,-32,-35,-38,-37,-39,-40,-43,-41,-42,]),'JACCARD':([8,10,12,22,29,35,50,],[-68,31,-67,-68,-68,-67,-66,]),'MERGEFLAT':([0,6,9,17,27,40,43,55,56,64,85,92,93,94,95,100,104,105,],[16,-3,16,16,16,-8,-5,16,-6,-4,-7,16,-59,-63,-61,-58,-62,-60,]),'LESSTHANEQUAL':([78,79,80,81,82,83,114,115,116,],[95,95,95,95,95,95,-64,95,-65,]),'GENOME':([44,46,],[62,62,]),'CAST':([0,6,9,17,27,40,43,55,56,64,85,92,93,94,95,100,104,105,],[7,-3,7,7,7,-8,-5,7,-6,-4,-7,7,-59,-63,-61,-58,-62,-60,]),'COMMA':([8,12,22,29,35,74,113,118,119,120,121,122,123,],[-68,33,-68,-68,33,84,-38,-37,-39,-40,-43,-41,-42,]),'BED12':([44,46,],[63,63,]),'STDEV':([78,79,80,81,82,83,],[99,99,99,99,99,99,]),'EQUALEQUAL':([78,79,80,81,82,83,114,115,116,],[100,100,100,100,100,100,-64,100,-65,]),'IDENTIFIER':([0,1,2,3,4,6,7,9,13,15,16,17,18,19,21,27,31,32,33,34,40,43,55,56,64,85,92,93,94,95,100,104,105,],[8,22,-29,22,22,-3,22,29,22,-31,-30,8,22,22,22,29,22,22,22,22,-8,-5,29,-6,-4,-7,29,-59,-63,-61,-58,-62,-60,]),'CHROM':([53,84,],[69,69,]),'$end':([0,6,14,17,37,40,43,56,64,85,],[-2,-3,0,-2,-1,-8,-5,-6,-4,-7,]),'LOAD':([0,6,9,17,27,40,43,55,56,64,85,92,93,94,95,100,104,105,],[9,-3,9,9,9,-8,-5,9,-6,-4,-7,9,-59,-63,-61,-58,-62,-60,]),'END':([53,84,],[72,72,]),'STRING':([0,6,9,17,27,40,43,55,56,64,85,92,93,94,95,100,104,105,],[5,-3,5,5,5,-8,-5,5,-6,-4,-7,5,-59,-63,-61,-58,-62,-60,]),'ANTIMODE':([78,79,80,81,82,83,],[90,90,90,90,90,90,]),'MODE':([78,79,80,81,82,83,],[98,98,98,98,98,98,]),'EQUAL':([8,],[27,]),'BED3':([44,46,],[58,58,]),'START':([53,84,],[70,70,]),'AS':([5,11,22,23,26,28,29,30,35,36,38,39,41,47,48,49,50,51,52,54,57,58,59,60,61,62,63,65,67,74,76,112,113,118,119,120,121,122,123,],[-11,-10,-68,-26,44,46,-9,-12,-67,-25,-34,-34,55,-21,-24,-23,-66,-27,-22,-28,-34,-16,-18,-17,-15,-20,-19,-13,-33,-36,-32,-35,-38,-37,-39,-40,-43,-41,-42,]),'SCORE':([53,84,],[71,71,]),'GREATERTHAN':([78,79,80,81,82,83,114,115,116,],[105,105,105,105,105,105,-64,105,-65,]),'BED6':([44,46,],[59,59,]),'INTERSECT':([0,6,8,9,10,12,17,22,27,29,35,40,43,50,55,56,64,85,92,93,94,95,100,104,105,],[13,-3,-68,13,32,-67,13,-68,13,-68,-67,-8,-5,-66,13,-6,-4,-7,13,-59,-63,-61,-58,-62,-60,]),'BED4':([44,46,],[60,60,]),'GREATERTHANEQUAL':([78,79,80,81,82,83,114,115,116,],[104,104,104,104,104,104,-64,104,-65,]),'WHERE':([22,35,38,39,50,57,58,59,60,61,62,63,],[-68,-67,53,53,-66,53,-16,-18,-17,-15,-20,-19,]),'STRAND':([53,84,],[73,73,]),'AND':([5,11,22,23,28,29,30,35,36,38,39,47,48,49,50,51,52,54,57,58,59,60,61,62,63,65,67,74,76,88,112,113,117,118,119,120,121,122,123,],[-11,-10,-68,-26,-14,-9,-12,-67,-25,-34,-34,-21,-24,-23,-66,-27,-22,-28,-34,-16,-18,-17,-15,-20,-19,-13,-33,-36,-32,114,-35,-38,-57,-37,-39,-40,-43,-41,-42,]),'DISTANCE':([53,84,],[66,66,]),'NAME':([53,84,],[68,68,]),'MERGEMAX':([0,6,9,17,27,40,43,55,56,64,85,92,93,94,95,100,104,105,],[15,-3,15,15,15,-8,-5,15,-6,-4,-7,15,-59,-63,-61,-58,-62,-60,]),'MIN':([78,79,80,81,82,83,],[89,89,89,89,89,89,]),'MAX':([78,79,80,81,82,83,],[106,106,106,106,106,106,]),'FILTER':([0,6,9,17,27,40,43,55,56,64,85,92,93,94,95,100,104,105,],[18,-3,18,18,18,-8,-5,18,-6,-4,-7,18,-59,-63,-61,-58,-62,-60,]),'MEAN':([78,79,80,81,82,83,],[101,101,101,101,101,101,]),'SAVE':([0,6,17,40,43,56,64,85,],[21,-3,21,-8,-5,-6,-4,-7,]),'OR':([5,11,22,23,28,29,30,35,36,38,39,47,48,49,50,51,52,54,57,58,59,60,61,62,63,65,67,74,76,88,112,113,117,118,119,120,121,122,123,],[-11,-10,-68,-26,-14,-9,-12,-67,-25,-34,-34,-21,-24,-23,-66,-27,-22,-28,-34,-16,-18,-17,-15,-20,-19,-13,-33,-36,-32,116,-35,-38,-57,-37,-39,-40,-43,-41,-42,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([78,79,80,81,82,83,],[102,107,108,109,110,111,]),'boolexp':([78,79,80,81,82,83,115,],[88,88,88,88,88,88,88,]),'ident':([0,1,3,4,7,9,13,17,18,19,21,27,31,32,33,34,55,92,],[12,23,24,25,26,12,35,12,35,35,41,12,35,35,35,35,12,12,]),'file':([9,55,],[28,75,]),'idents':([0,9,13,17,18,19,27,31,32,33,34,55,92,],[10,10,36,10,38,39,10,48,49,50,51,10,10,]),'sstmt':([0,17,],[6,6,]),'filetype':([44,46,],[57,65,]),'optfiletype':([28,],[47,]),'mods':([53,84,],[67,112,]),'element':([0,17,],[17,17,]),'merge':([0,9,17,27,55,92,],[19,19,19,19,19,19,]),'gql':([0,17,],[14,37,]),'boolexps':([78,79,80,81,82,83,115,],[97,97,97,97,97,97,124,]),'exp':([0,9,17,27,55,92,],[20,30,20,45,30,117,]),'compare':([78,79,80,81,82,83,115,],[92,92,92,92,92,92,92,]),'conj':([88,],[115,]),'mod':([53,84,],[74,74,]),'filetypes':([44,46,],[61,61,]),'optmods':([38,39,57,],[52,54,76,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> gql","S'",1,None,None,None),
  ('gql -> element gql','gql',2,'p_gql','/Users/rl6sf/src/gql/gqlgrammar.py',14),
  ('gql -> <empty>','gql',0,'p_gql_empty','/Users/rl6sf/src/gql/gqlgrammar.py',18),
  ('element -> sstmt','element',1,'p_element_stmt','/Users/rl6sf/src/gql/gqlgrammar.py',22),
  ('sstmt -> IDENTIFIER EQUAL exp SEMICOLON','sstmt',4,'p_sstmt_assignment','/Users/rl6sf/src/gql/gqlgrammar.py',35),
  ('sstmt -> PRINT ident SEMICOLON','sstmt',3,'p_sstmt_print','/Users/rl6sf/src/gql/gqlgrammar.py',39),
  ('sstmt -> PEAK ident NUMBER SEMICOLON','sstmt',4,'p_sstmt_peak','/Users/rl6sf/src/gql/gqlgrammar.py',43),
  ('sstmt -> SAVE ident AS file SEMICOLON','sstmt',5,'p_sstmt_save','/Users/rl6sf/src/gql/gqlgrammar.py',47),
  ('sstmt -> exp SEMICOLON','sstmt',2,'p_sstmt_exp','/Users/rl6sf/src/gql/gqlgrammar.py',51),
  ('exp -> IDENTIFIER','exp',1,'p_exp_identifier','/Users/rl6sf/src/gql/gqlgrammar.py',55),
  ('exp -> NUMBER','exp',1,'p_exp_number','/Users/rl6sf/src/gql/gqlgrammar.py',59),
  ('exp -> STRING','exp',1,'p_exp_string','/Users/rl6sf/src/gql/gqlgrammar.py',63),
  ('file -> exp','file',1,'p_file','/Users/rl6sf/src/gql/gqlgrammar.py',67),
  ('optfiletype -> AS filetype','optfiletype',2,'p_optfiletype','/Users/rl6sf/src/gql/gqlgrammar.py',71),
  ('optfiletype -> <empty>','optfiletype',0,'p_optfiletype_empty','/Users/rl6sf/src/gql/gqlgrammar.py',75),
  ('filetype -> filetypes','filetype',1,'p_filetype','/Users/rl6sf/src/gql/gqlgrammar.py',79),
  ('filetypes -> BED3','filetypes',1,'p_filetypes','/Users/rl6sf/src/gql/gqlgrammar.py',83),
  ('filetypes -> BED4','filetypes',1,'p_filetypes','/Users/rl6sf/src/gql/gqlgrammar.py',84),
  ('filetypes -> BED6','filetypes',1,'p_filetypes','/Users/rl6sf/src/gql/gqlgrammar.py',85),
  ('filetypes -> BED12','filetypes',1,'p_filetypes','/Users/rl6sf/src/gql/gqlgrammar.py',86),
  ('filetypes -> GENOME','filetypes',1,'p_filetypes','/Users/rl6sf/src/gql/gqlgrammar.py',87),
  ('exp -> LOAD file optfiletype','exp',3,'p_exp_load','/Users/rl6sf/src/gql/gqlgrammar.py',91),
  ('exp -> FILTER idents optmods','exp',3,'p_exp_foreach','/Users/rl6sf/src/gql/gqlgrammar.py',95),
  ('exp -> idents INTERSECT idents','exp',3,'p_exp_binary_intersect','/Users/rl6sf/src/gql/gqlgrammar.py',99),
  ('exp -> idents JACCARD idents','exp',3,'p_exp_binary_jaccard','/Users/rl6sf/src/gql/gqlgrammar.py',103),
  ('exp -> INTERSECT idents','exp',2,'p_exp_unary_intersect','/Users/rl6sf/src/gql/gqlgrammar.py',107),
  ('exp -> COUNT ident','exp',2,'p_exp_count','/Users/rl6sf/src/gql/gqlgrammar.py',111),
  ('exp -> ident SUBTRACT idents','exp',3,'p_exp_subtract','/Users/rl6sf/src/gql/gqlgrammar.py',115),
  ('exp -> merge idents optmods','exp',3,'p_exp_merges','/Users/rl6sf/src/gql/gqlgrammar.py',119),
  ('merge -> MERGEMIN','merge',1,'p_exp_merge','/Users/rl6sf/src/gql/gqlgrammar.py',123),
  ('merge -> MERGEFLAT','merge',1,'p_exp_merge','/Users/rl6sf/src/gql/gqlgrammar.py',124),
  ('merge -> MERGEMAX','merge',1,'p_exp_merge','/Users/rl6sf/src/gql/gqlgrammar.py',125),
  ('exp -> CAST ident AS filetype optmods','exp',5,'p_exp_CAST','/Users/rl6sf/src/gql/gqlgrammar.py',129),
  ('optmods -> WHERE mods','optmods',2,'p_exp_optmods','/Users/rl6sf/src/gql/gqlgrammar.py',133),
  ('optmods -> <empty>','optmods',0,'p_exp_optmods_empty','/Users/rl6sf/src/gql/gqlgrammar.py',137),
  ('mods -> mod COMMA mods','mods',3,'p_exp_mods','/Users/rl6sf/src/gql/gqlgrammar.py',141),
  ('mods -> mod','mods',1,'p_exp_mods_one','/Users/rl6sf/src/gql/gqlgrammar.py',145),
  ('mod -> NAME LPAREN function RPAREN','mod',4,'p_exp_mod','/Users/rl6sf/src/gql/gqlgrammar.py',149),
  ('mod -> DISTANCE LPAREN NUMBER RPAREN','mod',4,'p_exp_mod','/Users/rl6sf/src/gql/gqlgrammar.py',150),
  ('mod -> CHROM LPAREN function RPAREN','mod',4,'p_exp_mod','/Users/rl6sf/src/gql/gqlgrammar.py',151),
  ('mod -> START LPAREN function RPAREN','mod',4,'p_exp_mod','/Users/rl6sf/src/gql/gqlgrammar.py',152),
  ('mod -> END LPAREN function RPAREN','mod',4,'p_exp_mod','/Users/rl6sf/src/gql/gqlgrammar.py',153),
  ('mod -> STRAND LPAREN function RPAREN','mod',4,'p_exp_mod','/Users/rl6sf/src/gql/gqlgrammar.py',154),
  ('mod -> SCORE LPAREN function RPAREN','mod',4,'p_exp_mod','/Users/rl6sf/src/gql/gqlgrammar.py',155),
  ('function -> MIN','function',1,'p_function','/Users/rl6sf/src/gql/gqlgrammar.py',159),
  ('function -> MAX','function',1,'p_function','/Users/rl6sf/src/gql/gqlgrammar.py',160),
  ('function -> SUM','function',1,'p_function','/Users/rl6sf/src/gql/gqlgrammar.py',161),
  ('function -> COUNT','function',1,'p_function','/Users/rl6sf/src/gql/gqlgrammar.py',162),
  ('function -> MEAN','function',1,'p_function','/Users/rl6sf/src/gql/gqlgrammar.py',163),
  ('function -> MEDIAN','function',1,'p_function','/Users/rl6sf/src/gql/gqlgrammar.py',164),
  ('function -> MODE','function',1,'p_function','/Users/rl6sf/src/gql/gqlgrammar.py',165),
  ('function -> ANTIMODE','function',1,'p_function','/Users/rl6sf/src/gql/gqlgrammar.py',166),
  ('function -> COLLAPSE','function',1,'p_function','/Users/rl6sf/src/gql/gqlgrammar.py',167),
  ('function -> STDEV','function',1,'p_function','/Users/rl6sf/src/gql/gqlgrammar.py',168),
  ('function -> boolexps','function',1,'p_function_bool','/Users/rl6sf/src/gql/gqlgrammar.py',172),
  ('boolexps -> boolexp conj boolexps','boolexps',3,'p_boolexps','/Users/rl6sf/src/gql/gqlgrammar.py',176),
  ('boolexps -> boolexp','boolexps',1,'p_boolexps_one','/Users/rl6sf/src/gql/gqlgrammar.py',180),
  ('boolexp -> compare exp','boolexp',2,'p_boolexp','/Users/rl6sf/src/gql/gqlgrammar.py',184),
  ('compare -> EQUALEQUAL','compare',1,'p_bool_compare','/Users/rl6sf/src/gql/gqlgrammar.py',188),
  ('compare -> LESSTHAN','compare',1,'p_bool_compare','/Users/rl6sf/src/gql/gqlgrammar.py',189),
  ('compare -> GREATERTHAN','compare',1,'p_bool_compare','/Users/rl6sf/src/gql/gqlgrammar.py',190),
  ('compare -> LESSTHANEQUAL','compare',1,'p_bool_compare','/Users/rl6sf/src/gql/gqlgrammar.py',191),
  ('compare -> GREATERTHANEQUAL','compare',1,'p_bool_compare','/Users/rl6sf/src/gql/gqlgrammar.py',192),
  ('compare -> NOTEQUAL','compare',1,'p_bool_compare','/Users/rl6sf/src/gql/gqlgrammar.py',193),
  ('conj -> AND','conj',1,'p_bool_conj','/Users/rl6sf/src/gql/gqlgrammar.py',197),
  ('conj -> OR','conj',1,'p_bool_conj','/Users/rl6sf/src/gql/gqlgrammar.py',198),
  ('idents -> ident COMMA idents','idents',3,'p_idents','/Users/rl6sf/src/gql/gqlgrammar.py',202),
  ('idents -> ident','idents',1,'p_idents_one','/Users/rl6sf/src/gql/gqlgrammar.py',206),
  ('ident -> IDENTIFIER','ident',1,'p_idnent_identifier','/Users/rl6sf/src/gql/gqlgrammar.py',210),
]
