# LOAD
a = LOAD "data/tiny_a.bed";
b = LOAD "data/tiny_b.bed";
c = LOAD "data/tiny_c.bed";
d = LOAD "data/tiny_d.bed";
bed3 = LOAD "data/bed3.bed";
gtf = LOAD "data/gtf.gtf";
g = LOAD "data/human.hg18.genome" AS GENOME;

# remote LEAD
mt = LOAD "mm9:c2c12:chipseq:polii_mt";
mb = LOAD "mm9:c2c12:chipseq:polii_mb";

#CAST
#gtf_bed = CAST gtf AS BED6;
#PEAK gtf_bed 10;
#sould_fail = CAST gtf_bed AS BED12;

# FILTER
gtf_subset = FILTER gtf WHERE ATTRIBUTE(=~"BC");
PEAK gtf_subset 10;

# HILBERT
#h_mt = HILBERT mt WHERE CHROM("chr1"),GENOME("hg19"),DIMENSION(128);
#h_mb = HILBERT mb WHERE CHROM("chr1"),GENOME("hg19"),DIMENSION(128);
#PLOT h_mt AS "h_mt.png";
#PLOT h_mb AS "h_mb.png";

# JACCARD
#mt_sort = SORT mt;
#mb_sort = SORT mb;
#r = mt_sort,mb_sort JACCARD mt_sort,mb_sort;
#PRINT r;

# INTERSECT 
#a = LOAD "data/tiny_*.bed";
#b = LOAD "data/tiny_b.bed";
#e = a INTERSECT b,c,d;
#PRINT e;
#f  = COUNT e;
#PRINT e;

# MERGMIN
#e = MERGEMIN a,b,c WHERE NAME(COLLAPSE),SCORE(COUNT);
#PRINT e;
#f = FILTER e WHERE SCORE(>1);
#PRINT f;
#e = MERGEMAX a,b,c,d WHERE SCORE(==100);
#e = FOREACH a,b,c,d WHERE SCORE(<100&>50&!=75),START(>1000),END(<10000),CHROM(=="chr1");

# FILTER
#e = FILTER a,b,c,d WHERE CHROM(=="chr1");
#PEAK e 10;
#e = FILTER a,b,c,d WHERE NAME(=~"1");
#PEAK e 10;

#e = MERGEMAX a,b,c,d WHERE SCORE(SUM);
#COUNT e ;
#e = MERGEMIN a,b,c,d WHERE SCORE(SUM);
#COUNT e ;
#e = MERGEFLAT a,b,c,d WHERE SCORE(SUM);
#COUNT e ;

#PRINT e;

# test intersect
#e = INTERSECT a,b,c,d;
#e = a,b INTERSECT a,b,c,d;

#f = COUNT e;

#PRINT f;

#COUNT a;

#f = INTERSECT a,b;

#COUNT f;
#PRINT f;
#PRINT e;

#a_bed6 = CAST a AS BED6;

#d = MERGE a_bed6,b;
#d = MERGE a_bed6,b WHERE SCORE(MIN),DISTANCE(10);
#d = MERGE a_bed6,b;
#d = MERGE a_bed6 b;

#PRINT e;

#d = MERGE a,b,c WHERE SCORE(MIN);
#d = MERGE a,b,c WHERE DISTANCE(10);
#d = MERGE a,b,c WHERE DISTANCE(10),SCORE(MIN);
#d = MERGE a,b,c WHERE SCORE(MIN),SCORE(MIN);


#e = MERGEMIN d;				# assumes sccore is zero, d is BEDN
#e = MERGEMIN e SCORE(MIN);		# score is MIN of a,b,c
#e = MERGEMIN e SCORE(MAX);		# score is MAX of a,b,c
#e = MERGEMIN e SCORE(MAX a,b); # score is MIN of a,b
#e = MERGEMIN e SCORE(a*2);		# score is a * 2 
#SAVE e AS "merge-min_ab.bed"

#e = SUBTRACT a,b,c;

#PRINT d;
#SAVE d AS "intersect.bed";
#SAVE e AS "run.bed";
